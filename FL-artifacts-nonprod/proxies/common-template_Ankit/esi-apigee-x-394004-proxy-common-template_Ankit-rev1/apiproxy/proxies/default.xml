<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <DefaultFaultRule name="df-rule">
        <Step>
            <Name>AM-SetGenericFaultMessage</Name>
        </Step>
    </DefaultFaultRule>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>AC-AllowIPAddress</Name>
            </Step>
            <Step>
                <Name>KVM-ReadCommonConfig</Name>
            </Step>
            <Step>
                <Name>SA-SpikePerMinute</Name>
            </Step>
            <Step>
                <Name>VA-VerifyApiKey</Name>
            </Step>
            <Step>
                <Name>Quota-DailyQuota</Name>
            </Step>
            <Step>
                <Name>AM-AssignPrivateKey</Name>
            </Step>
            <Step>
                <Name>VJWT-VerifyJWToken</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <Flows>
        <Flow name="HandleCache">
            <Description>Flow to handle cache related policies</Description>
            <Request>
                <Step>
                    <Name>PC-CommonTemplatePolicy</Name>
                </Step>
                <Step>
                    <Name>JS-SetURL</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>LC-CommonCache</Name>
                </Step>
                <Step>
                    <Name>AM-CacheValueHeader</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/cache")</Condition>
        </Flow>
        <Flow name="OAuthFlow-CreateToken">
            <Description>Flow to handle OAuth policies</Description>
            <Request>
                <Step>
                    <Name>OA-CreateAccessToken</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/oauth/accessToken")</Condition>
        </Flow>
        <Flow name="OAuthFlow-VerifyToken">
            <Description>OAuthFlow Verify Access Token</Description>
            <Request>
                <Step>
                    <Name>OA-VerifyAccessToken</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/oauth/validateaccesstoken")</Condition>
        </Flow>
        <Flow name="HandleResponseCache">
            <Description>Flow to Handle Response Cache</Description>
            <Request>
                <Step>
                    <Name>RC-BackendApiResponseCache</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>RC-BackendApiResponseCache</Name>
                </Step>
                <Step>
                    <Name>AM-SetCacheHeaders</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/handleResponseCache")</Condition>
        </Flow>
        <Flow name="HandleAccessEntity">
            <Description>Retrieve profiles for Apigee X entities. Entities include such things as developers, developer apps, products, and more.</Description>
            <Request>
                <Step>
                    <Name>AE-GetDeveloperProfileEmail</Name>
                </Step>
                <Step>
                    <Condition>AccessEntity.GetDeveloperProfileEmail.content != null</Condition>
                    <Name>EV-DeveloperEmail</Name>
                </Step>
                <Step>
                    <Name>AM-SetResponseHeader</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/handleAccessEntity")</Condition>
        </Flow>
        <Flow name="ServiceCallOut">
            <Description>This flow is to showcase service callout policy usage</Description>
            <Request>
                <Step>
                    <Name>SC-PetStore</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>AM-SetPayload</Name>
                </Step>
                <Step>
                    <Name>J2X-JSONtoXML</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/servicecallout")</Condition>
        </Flow>
        <Flow name="HandleFault">
            <Description>This flow is to showcase raise fault policy usage</Description>
            <Request/>
            <Response>
                <Step>
                    <Name>RF-Raise404Fault</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/raiseFault")</Condition>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <HTTPProxyConnection>
        <BasePath>/common-template</BasePath>
    </HTTPProxyConnection>
    <RouteRule name="DoNothing">
        <Condition>(proxy.pathsuffix MatchesPath "/oauth/accessToken") or (proxy.pathsuffix MatchesPath "/handleAccessEntity") or (proxy.pathsuffix MatchesPath "/servicecallout")</Condition>
    </RouteRule>
    <RouteRule name="TE-httpbin">
        <TargetEndpoint>TE-httpbin</TargetEndpoint>
        <Condition>(proxy.pathsuffix MatchesPath "/oauth/validateaccesstoken") or (proxy.pathsuffix MatchesPath "/handleResponseCache") or (proxy.pathsuffix MatchesPath "/raiseFault")</Condition>
    </RouteRule>
    <RouteRule name="default">
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>